# 该配置文件，只做注释参考，请勿修改此文件。（修改后也不会有任何效果，如要修改配置，请在nacos中修改redis.yml）

def:
  redis:
    ip: 127.0.0.1
    port: 6379
    password: 123456

# redis 通用配置
spring:
  cache:
    type: GENERIC

j2cache:
  # j2cache 配置文件的在项目中/resources文件夹下的路径 （注意，若想将里面的配置存放在naocs或者application.yml中，需要注释这行）
  # configLocation: /j2cache.properties
  # 是否开启 SpringCache 支持
  open-spring-cache: true
  # 清除缓存的模式
  #  active:主动清除，二级缓存过期主动通知各节点清除，优点在于所有节点可以同时收到缓存清除
  #  passive:被动清除，一级缓存过期进行通知各节点清除一二级缓存
  #  blend:两种模式一起运作，对于各个节点缓存准确以及及时性要求高的可以使用，正常用前两种模式中一个就可
  cache-clean-mode: passive
  # 是否允许存放null 值
  allow-null-values: true
  # redis 客户端  (可选值： jedis  lettuce)
  redis-client: lettuce
  # 是否开启二级缓存  开发环境可以关闭
  l2-cache-open: true

  #以下来自 j2cache.properties
  # 缓存广播方式：
  # jgroups -> 使用jgroups的多播
  # redis -> 使用redis发布/订阅机制(使用jedis)
  # lettuce -> 使用redis发布/订阅机制(使用lettuce，推荐)
  # rabbitmq -> 使用 RabbitMQ 发布/消费 机制
  # rocketmq -> 使用 RocketMQ 发布/消费 机制
  # none -> 不要通知集群中的其他节点
  # xx.xxxx.xxxx.Xxxxx 实现net.oschina.j2cache.cluster.ClusterPolicy的您自己的缓存广播策略类名
  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy
  # 1级缓存提供商类，可选值：
  # none -> 禁用此级别缓存
  # ehcache -> 使用 ehcache2 作为1级缓存
  # ehcache3 -> 使用 ehcache3 作为1级缓存
  # caffeine -> 使用 caffeine 作为1级缓存 (仅作用于内存)
  L1:
    provider_class: caffeine
  # 2级缓存提供商类，可选值：
  # redis -> 使用 redis 作为2级缓存 (使用 jedis)
  # lettuce -> 使用 redis 作为2级缓存 (使用 lettuce)
  # readonly-redis -> 使用 作为2级缓存 ,但永远不要向它写入数据。如果使用此提供程序，则必须取消注释' j2cache.L2.config_section '使redis配置可用。
  # memcached -> 使用 memcached 作为2级缓存 (使用 xmemcached),
  # [classname] -> 使用自定义供应商   (当使用自定义时，必须手动指定 L2.config_section )
  L2:
    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider
    config_section: lettuce
  # 在redis缓存数据中启用/禁用ttl(如果禁用，redis中的对象将永远不会过期，默认值为true)
  # 注意:redis哈希模式(redis.storage = hash 和 lettuce.storage = hash)不支持此功能
  sync_ttl_to_redis: true
  # 是否默认缓存空对象(默认为false)
  default_cache_null_object: false
  # 缓存序列化提供者 ， 可选值：
  # fst -> 使用 fast 序列化 (推荐)              缺点：增删改字段后反序列化会报错
  # kyro -> 使用 kyro 序列化                   缺点：生成的byte数据中部包含field数据，对类升级的兼容性很差。  跨语言支持较复杂！
  # json -> 使用 fst's json 序列化 (测试中)     缺点：不支持LocalDateTime
  # fastjson -> 使用 fastjson 序列化           缺点：嵌入非静态类不支持， 阿里的东西bug多...
  # java -> java 标准序列化                    缺点：速度慢，占空间， 增删改字段后反序列化会报错
  # xxx.xxx.xxxx.Xxx -> [自定义序列化类]
  serialization: json

# j2cache.serialization=json 时可用
#json:
#  map.person: net.oschina.j2cache.demo.Person

# 广播相关配置： jgroups 配置 （当 j2cache.broadcast=jgroups 时，才需要配置）
jgroups:
  # 网络配置文件路径 （相对于/resources 目录）
  configXml: /network.xml
  # 广播渠道名称
  channel:
    name: j2cache

# 广播相关配置： rabbitmq 配置 （当 j2cache.broadcast=rabbitmq 时，才需要配置）
rabbitmq:
  exchange: j2cache
  host: localhost
  port: 5672
  username: guest
  password: guest

# 广播相关配置： rocketmq 配置 （当 j2cache.broadcast=rocketmq 时，才需要配置）
rocketmq:
  name: j2cache
  topic: j2cache
  # 使用;分割多台主机
  hosts: 127.0.0.1:9876

# 1级相关缓存配置： （当 j2cache.L1.config_section=ehcache 时，才需要配置）
ehcache:
  configXml: /ehcache.xml

# 1级相关缓存配置： （当 j2cache.L1.config_section=ehcache3 时，才需要配置）
ehcache3:
  configXml: /ehcache.xml
  defaultHeapSize: 1000

# 1级相关缓存配置： （当 j2cache.L1.config_section=caffeine 时，才需要配置）
caffeine:
  # properties 和 region.[name] 任选一种方式配置
  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中
  #region.[name]: size, xxxx[s|m|h|d]


# 广播相关配置：redis 配置      （当 j2cache.broadcast=redis 时 或者 j2cache.L2.config_section=redis 时，才需要配置）
# 2级缓存相关配置： redis 配置   （当 j2cache.broadcast=redis 时 或者 j2cache.L2.config_section=redis 或者 j2cache.L2.provider_class=redis 时，才需要配置）
redis:
  # Redis 集群模式
  # single -> 单 redis 服务
  # sentinel -> 主从 服务
  # cluster -> 集群 服务 (数据库配置无效，使用 database = 0）
  # sharded -> 分片 服务  (密码、数据库必须在 hosts 中指定，且连接池配置无效 ; redis://user:password@127.0.0.1:6379/0）
  mode: single
  # redis storage mode (generic|hash)
  storage: generic
  # redis发布/订阅频道名称
  channel: j2cache
  # redis发布/订阅服务器(该值为空时，使用redis.host)
  channel.host:
  # 集群名: 仅用于分片
  cluster_name: j2cache
  # redis缓存命名空间可选，默认[空]
  namespace:
  hosts: ${def.redis.ip}:${def.redis.port}
  timeout: 2000
  password: ${def.redis.password}
  database: 0
  maxTotal: 100
  maxIdle: 10
  maxWaitMillis: 5000
  minEvictableIdleTimeMillis: 60000
  minIdle: 1
  numTestsPerEvictionRun: 10
  lifo: false
  softMinEvictableIdleTimeMillis: 10
  testOnBorrow: true
  testOnReturn: false
  testWhileIdle: true
  timeBetweenEvictionRunsMillis: 300000
  blockWhenExhausted: false
  jmxEnabled: false

# 广播相关配置：lettuce 配置      （当 j2cache.broadcast=lettuce 或者 j2cache.L2.config_section=lettuce 时，才需要配置）
# 2级缓存相关配置： lettuce 配置（当 j2cache.broadcast=lettuce 或者 j2cache.L2.config_section=lettuce 或者 j2cache.L2.provider_class=redis 时，才需要配置）
lettuce:
  mode: single
  namespace:
  storage: generic
  channel: j2cache
  scheme: redis
  hosts: ${def.redis.ip}:${def.redis.port}
  password: ${def.redis.password}
  database: 0
  sentinelMasterId:
  maxTotal: 100
  maxIdle: 10
  minIdle: 10
  timeout: 10000

# 广播相关配置：memcached 配置      （当 j2cache.broadcast=memcached 或者 j2cache.L2.config_section=memcached 时，才需要配置）
# 2级缓存相关配置：memcached 配置（当 j2cache.broadcast=memcached 或者 j2cache.L2.config_section=memcached 或者 j2cache.L2.provider_class=memcached 时，才需要配置）
memcached:
  servers: 127.0.0.1:11211
  username:
  password:
  connectionPoolSize: 10
  connectTimeout: 1000
  failureMode: false
  healSessionInterval: 1000
  maxQueuedNoReplyOperations: 100
  opTimeout: 100
  sanitizeKeys: false
